@use '/src/styles/abstracts/' as a;
@import '../../styles/variables.scss';
.root {
  display: flex;
  height: 100%;
  padding: 0 6rem 3rem;
  overflow: hidden;
  width: 100%;
  background-color: var(--background-gradient);
}
.sidebar {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: a.$padding--element--large--equal;
  width: 5rem;
}
.sidebar_section {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.un_styled {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 3rem;
  width: 3rem;
  background-color: inherit;
  border-radius: a.$br--6;
  transition: 0.3s ease-in-out;
  border: none;
  cursor: pointer;

  @media (hover: hover) {
    &:hover {
      background-color: var(--button-hover);
    }
  }

  &:disabled {
    background-color: var(--button-disabled);
  }
}

.basic {
  display: flex;
  flex: 1;
  min-width: 0;
}

.basic_wrapper {
  display: flex;
  flex-direction: column;
  flex: 1 1 0%;
  background-color: var(--background-second);
  border-radius: 1rem;
}

.basic_tabs {
  display: flex;
  gap: 10px;
  align-items: center;
  justify-content: start;
  height: 3rem;
  width: 100%;
  padding: 0 1rem;
}

.tabs_list {
  display: flex;
  align-items: bottom;
  overflow-x: auto;
}
.header_item_active {
  display: flex;
  align-items: stretch;
  border-radius: a.$br--8;
  color: var(--text-main);
  background-color: var(--code-string);
  padding: a.$padding--link;

  @media (hover: hover) {
    &:hover {
      background-color: var(--background-end-color);
    }
  }
}
.header_item {
  display: flex;
  align-items: stretch;
}

.tabButton {
  cursor: pointer;
  background-color: var(--background-tab);
  width: auto;
  padding: 0 10px;

  @media (hover: hover) {
    &:hover {
      background-color: var(--background-tab-hover);
    }
  }
}

.tabButton_active {
  background-color: var(--background-editor);
}

.tabText {
  background-color: transparent;
  width: auto;
  padding-right: 10px;

  @media (hover: hover) {
    &:hover {
      background-color: transparent;
    }
  }
}

.iconButton {
  background-color: transparent;
  width: 40px;
}

.deleteButton {
  background-color: transparent;
  width: auto;
}

.editor_container {
  display: flex;
  flex: 1;
  padding: 0 1rem 1rem;
}
.editors {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background-color: var(--background-editor);
  border-radius: a.$br--6;
  box-shadow: a.$object-box-shadow--b;
  width: 50%;
}
.editor_wrapp {
  display: flex;
  width: 100%;
  height: 600px;
  padding: 1rem;
  border-bottom: 1px solid var(--text-secondary);
}
.editor {
}
.editor_inner {
  overflow: hidden;
  position: relative;
  width: 3px;
  height: 0px;
  top: 49px;
  left: 208px;
}
.vscrollbar {
  bottom: 17px;
  display: block;
  div {
    min-width: 1px;
    height: 728px;
  }
}
.hscrollbar {
  right: 17px;
  left: 33px;
  display: block;
  div {
    height: 100%;
    min-height: 1px;
    width: 664px;
  }
}

.toolbar {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 5rem;
  button {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 3rem;
    width: 3rem;
    border-radius: a.$br--6;
    transition: 0.3s ease-in-out;
    border: none;
    cursor: pointer;

    @media (hover: hover) {
      &:hover {
        background-color: var(--button-hover);
      }
    }

    &:disabled {
      background-color: var(--button-disabled);
    }
  }
}
.execute_button {
  background-color: var(--button-active);
}
